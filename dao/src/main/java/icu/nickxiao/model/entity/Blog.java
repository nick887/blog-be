package icu.nickxiao.model.entity;

import java.io.Serializable;
import java.time.LocalDateTime;
import javax.annotation.Generated;

/**
 * Database Table Remarks:
 *   博客表
 *
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table blog
 */
public class Blog implements Serializable {
    /**
     * Database Column Remarks:
     *   blog id
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.id")
    private Long id;

    /**
     * Database Column Remarks:
     *   喜欢数
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.likes")
    private Long likes;

    /**
     * Database Column Remarks:
     *   主题
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.topic")
    private String topic;

    /**
     * Database Column Remarks:
     *   浏览记录
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.visit_count")
    private Long visitCount;

    /**
     * Database Column Remarks:
     *   标题
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.title")
    private String title;

    /**
     * Database Column Remarks:
     *   创建时间
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.created")
    private LocalDateTime created;

    /**
     * Database Column Remarks:
     *   更新时间
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.updated")
    private LocalDateTime updated;

    /**
     * Database Column Remarks:
     *   删除时间
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.deleted")
    private LocalDateTime deleted;

    /**
     * Database Column Remarks:
     *   主体
     */
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.body")
    private String body;

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    private static final long serialVersionUID = 1L;

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.id")
    public Long getId() {
        return id;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withId(Long id) {
        this.setId(id);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.id")
    public void setId(Long id) {
        this.id = id;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.likes")
    public Long getLikes() {
        return likes;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withLikes(Long likes) {
        this.setLikes(likes);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.likes")
    public void setLikes(Long likes) {
        this.likes = likes;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.topic")
    public String getTopic() {
        return topic;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withTopic(String topic) {
        this.setTopic(topic);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.topic")
    public void setTopic(String topic) {
        this.topic = topic == null ? null : topic.trim();
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.visit_count")
    public Long getVisitCount() {
        return visitCount;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withVisitCount(Long visitCount) {
        this.setVisitCount(visitCount);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.visit_count")
    public void setVisitCount(Long visitCount) {
        this.visitCount = visitCount;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.title")
    public String getTitle() {
        return title;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withTitle(String title) {
        this.setTitle(title);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.title")
    public void setTitle(String title) {
        this.title = title == null ? null : title.trim();
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.created")
    public LocalDateTime getCreated() {
        return created;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withCreated(LocalDateTime created) {
        this.setCreated(created);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.created")
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.updated")
    public LocalDateTime getUpdated() {
        return updated;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withUpdated(LocalDateTime updated) {
        this.setUpdated(updated);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.updated")
    public void setUpdated(LocalDateTime updated) {
        this.updated = updated;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.deleted")
    public LocalDateTime getDeleted() {
        return deleted;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withDeleted(LocalDateTime deleted) {
        this.setDeleted(deleted);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.deleted")
    public void setDeleted(LocalDateTime deleted) {
        this.deleted = deleted;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.body")
    public String getBody() {
        return body;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public Blog withBody(String body) {
        this.setBody(body);
        return this;
    }

    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source field: blog.body")
    public void setBody(String body) {
        this.body = body == null ? null : body.trim();
    }

    @Override
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Blog other = (Blog) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getLikes() == null ? other.getLikes() == null : this.getLikes().equals(other.getLikes()))
            && (this.getTopic() == null ? other.getTopic() == null : this.getTopic().equals(other.getTopic()))
            && (this.getVisitCount() == null ? other.getVisitCount() == null : this.getVisitCount().equals(other.getVisitCount()))
            && (this.getTitle() == null ? other.getTitle() == null : this.getTitle().equals(other.getTitle()))
            && (this.getCreated() == null ? other.getCreated() == null : this.getCreated().equals(other.getCreated()))
            && (this.getUpdated() == null ? other.getUpdated() == null : this.getUpdated().equals(other.getUpdated()))
            && (this.getDeleted() == null ? other.getDeleted() == null : this.getDeleted().equals(other.getDeleted()))
            && (this.getBody() == null ? other.getBody() == null : this.getBody().equals(other.getBody()));
    }

    @Override
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getLikes() == null) ? 0 : getLikes().hashCode());
        result = prime * result + ((getTopic() == null) ? 0 : getTopic().hashCode());
        result = prime * result + ((getVisitCount() == null) ? 0 : getVisitCount().hashCode());
        result = prime * result + ((getTitle() == null) ? 0 : getTitle().hashCode());
        result = prime * result + ((getCreated() == null) ? 0 : getCreated().hashCode());
        result = prime * result + ((getUpdated() == null) ? 0 : getUpdated().hashCode());
        result = prime * result + ((getDeleted() == null) ? 0 : getDeleted().hashCode());
        result = prime * result + ((getBody() == null) ? 0 : getBody().hashCode());
        return result;
    }

    @Override
    @Generated(value="org.mybatis.generator.api.MyBatisGenerator", comments="Source Table: blog")
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", likes=").append(likes);
        sb.append(", topic=").append(topic);
        sb.append(", visitCount=").append(visitCount);
        sb.append(", title=").append(title);
        sb.append(", created=").append(created);
        sb.append(", updated=").append(updated);
        sb.append(", deleted=").append(deleted);
        sb.append(", body=").append(body);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}